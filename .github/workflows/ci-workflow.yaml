name: Confluent IaC CI Workflow

on:
  pull_request:
    paths:
      - '**/topics/*.yaml'

jobs:
  detect-changes:
    name: Detect Changed Topics
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Get list of changed topic files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: '**/topics/*.yaml'

      - name: Build matrix with env and cloud
        id: set-matrix
        run: |
          echo "Building matrix..."

          files_json=$(echo '${{ steps.changed-files.outputs.all_changed_files }}' | jq -R 'split(" ") | map(select(length > 0))')

          echo "Changed files:"
          echo "$files_json" | jq .

          matrix_entries=$(jq -n --argjson files "$files_json" '
            {
              include: [ 
                $files[] | 
                {
                  file: .,
                  cloud: (split("/")[0]),
                  env: (split("/")[1])
                }
              ]
            }
          ')

          echo "Full matrix JSON:"
          echo "$matrix_entries" | jq .

          # Safely write to $GITHUB_OUTPUT
          echo "matrix=$(echo "$matrix_entries" | jq -c .)" >> "$GITHUB_OUTPUT"

  terragrunt-plan:
    name: Terragrunt Plan
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}
    environment: ${{ matrix.env }}

    env:
          CONFLUENT_API_KEY: ${{ secrets.CONFLUENT_API_KEY }}
          CONFLUENT_API_SECRET: ${{ secrets.CONFLUENT_API_SECRET }}
          KAFKA_API_KEY: ${{ secrets.KAFKA_API_KEY }}
          KAFKA_API_SECRET: ${{ secrets.KAFKA_API_SECRET }}
          KAFKA_CLUSTER_ID: ${{ secrets.KAFKA_CLUSTER_ID }}
          KAFKA_REST_ENDPOINT: ${{ secrets.KAFKA_REST_ENDPOINT }}
          AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
          AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}
          
    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "CLOUD_PROVIDER=${{ matrix.cloud }}" >> $GITHUB_ENV
          echo "ENV=${{ matrix.env }}" >> $GITHUB_ENV
          echo "DIR_PATH=$(dirname ${{ matrix.file }})" >> $GITHUB_ENV
          echo "FILE_NAME=$(basename ${{ matrix.file }})" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Install Terragrunt
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v0.56.3/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

      - name: Terragrunt Init
        working-directory: ${{ env.DIR_PATH }}
        run: terragrunt init

      - name: Terragrunt Validate
        working-directory: ${{ env.DIR_PATH }}
        run: terragrunt validate

      - name: Terragrunt Plan
        working-directory: ${{ env.DIR_PATH }}
        run: terragrunt plan
        
